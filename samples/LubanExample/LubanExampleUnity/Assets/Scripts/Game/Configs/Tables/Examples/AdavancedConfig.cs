
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace Examples
{
public sealed partial class AdavancedConfig : Luban.BeanBase
{
    public AdavancedConfig(ByteBuf _buf) 
    {
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SomeArray1 = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); SomeArray1[__index0] = __e0;}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SomeArray2 = new float[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { float __e0;__e0 = _buf.ReadFloat(); SomeArray2[__index0] = __e0;}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SomeArray3 = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); SomeArray3.Add(_e0);}}
        {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SomeArray4 = new int[__n0][];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int[] __e0;{int __n1 = System.Math.Min(_buf.ReadSize(), _buf.Size);__e0 = new int[__n1];for(var __index1 = 0 ; __index1 < __n1 ; __index1++) { int __e1;__e1 = _buf.ReadInt(); __e0[__index1] = __e1;}} SomeArray4[__index0] = __e0;}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SomeMap1 = new System.Collections.Generic.Dictionary<string, float>(n0 * 3 / 2);for(var i0 = 0 ; i0 < n0 ; i0++) { string _k0;  _k0 = _buf.ReadString(); float _v0;  _v0 = _buf.ReadFloat();     SomeMap1.Add(_k0, _v0);}}
        SomeBean1 = Reward.DeserializeReward(_buf);
        SomeBean2 = Reward.DeserializeReward(_buf);
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SomeBeanList = new System.Collections.Generic.List<Reward>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { Reward _e0;  _e0 = Reward.DeserializeReward(_buf); SomeBeanList.Add(_e0);}}
    }

    public static AdavancedConfig DeserializeAdavancedConfig(ByteBuf _buf)
    {
        return new Examples.AdavancedConfig(_buf);
    }

    /// <summary>
    /// 这是一个int数组,用逗号分隔
    /// </summary>
    public readonly int[] SomeArray1;
    /// <summary>
    /// 这是一个float数组，用分号分隔
    /// </summary>
    public readonly float[] SomeArray2;
    /// <summary>
    /// 这是一个string列表，用◆分隔
    /// </summary>
    public readonly System.Collections.Generic.List<string> SomeArray3;
    /// <summary>
    /// 这是一个二维int数组
    /// </summary>
    public readonly int[][] SomeArray4;
    /// <summary>
    /// 这是一个键为string，值为float的字典
    /// </summary>
    public readonly System.Collections.Generic.Dictionary<string, float> SomeMap1;
    /// <summary>
    /// 道具Id
    /// </summary>
    public readonly Reward SomeBean1;
    /// <summary>
    /// 也可以这样写成一格
    /// </summary>
    public readonly Reward SomeBean2;
    /// <summary>
    /// 自定义类型列表
    /// </summary>
    public readonly System.Collections.Generic.List<Reward> SomeBeanList;
   
    public const int __ID__ = 1144088154;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        SomeBean1?.ResolveRef(tables);
        SomeBean2?.ResolveRef(tables);
        foreach (var _e in SomeBeanList) { _e?.ResolveRef(tables); }
    }

    public override string ToString()
    {
        return "{ "
        + "someArray1:" + Luban.StringUtil.CollectionToString(SomeArray1) + ","
        + "someArray2:" + Luban.StringUtil.CollectionToString(SomeArray2) + ","
        + "someArray3:" + Luban.StringUtil.CollectionToString(SomeArray3) + ","
        + "someArray4:" + Luban.StringUtil.CollectionToString(SomeArray4) + ","
        + "someMap1:" + Luban.StringUtil.CollectionToString(SomeMap1) + ","
        + "someBean1:" + SomeBean1 + ","
        + "someBean2:" + SomeBean2 + ","
        + "someBeanList:" + Luban.StringUtil.CollectionToString(SomeBeanList) + ","
        + "}";
    }
}

}

