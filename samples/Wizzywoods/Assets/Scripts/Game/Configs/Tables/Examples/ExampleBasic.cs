//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace Game.Config.Tables.Examples
{
public sealed partial class ExampleBasic :  Bright.Config.BeanBase 
{
    public ExampleBasic(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Grade = _buf.ReadInt();
        Star = _buf.ReadInt();
        IconRes = _buf.ReadString();
        Price = _buf.ReadFloat();
        Type = (EExampleType)_buf.ReadInt();
        IsInGacha = _buf.ReadBool();
        SomeLongValue = _buf.ReadLong();
        SomeDoubleValue = _buf.ReadDouble();
        SomeVec3 = _buf.ReadVector3();
        PostInit();
    }

    public static ExampleBasic DeserializeExampleBasic(ByteBuf _buf)
    {
        return new Examples.ExampleBasic(_buf);
    }

    /// <summary>
    /// 这是Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 等级
    /// </summary>
    public int Grade { get; private set; }
    /// <summary>
    /// 星级
    /// </summary>
    public int Star { get; private set; }
    /// <summary>
    /// 图标资源
    /// </summary>
    public string IconRes { get; private set; }
    /// <summary>
    /// 价格
    /// </summary>
    public float Price { get; private set; }
    /// <summary>
    /// 类型
    /// </summary>
    public EExampleType Type { get; private set; }
    /// <summary>
    /// 是否可抽取
    /// </summary>
    public bool IsInGacha { get; private set; }
    /// <summary>
    /// 这是一个long
    /// </summary>
    public long SomeLongValue { get; private set; }
    /// <summary>
    /// 这是一个double
    /// </summary>
    public double SomeDoubleValue { get; private set; }
    /// <summary>
    /// 这是一个vector3
    /// </summary>
    public System.Numerics.Vector3 SomeVec3 { get; private set; }

    public const int __ID__ = -717891991;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Grade:" + Grade + ","
        + "Star:" + Star + ","
        + "IconRes:" + IconRes + ","
        + "Price:" + Price + ","
        + "Type:" + Type + ","
        + "IsInGacha:" + IsInGacha + ","
        + "SomeLongValue:" + SomeLongValue + ","
        + "SomeDoubleValue:" + SomeDoubleValue + ","
        + "SomeVec3:" + SomeVec3 + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}