//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace Game.Config.Tables
{
public sealed partial class CharacterConfig :  Bright.Config.BeanBase 
{
    public CharacterConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadString();
        PrefabRes = _buf.ReadString();
        AttackAbility = _buf.ReadString();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Attributes = new System.Collections.Generic.Dictionary<EAttributeType, float>(n0 * 3 / 2);for(var i0 = 0 ; i0 < n0 ; i0++) { EAttributeType _k0;  _k0 = (EAttributeType)_buf.ReadInt(); float _v0;  _v0 = _buf.ReadFloat();     Attributes.Add(_k0, _v0);}}
        PostInit();
    }

    public static CharacterConfig DeserializeCharacterConfig(ByteBuf _buf)
    {
        return new CharacterConfig(_buf);
    }

    /// <summary>
    /// 这是Id
    /// </summary>
    public string Id { get; private set; }
    /// <summary>
    /// 预制体资源
    /// </summary>
    public string PrefabRes { get; private set; }
    /// <summary>
    /// 普攻能力
    /// </summary>
    public string AttackAbility { get; private set; }
    public AbilityConfig AttackAbility_Ref { get; private set; }
    /// <summary>
    /// 初始属性
    /// </summary>
    public System.Collections.Generic.Dictionary<EAttributeType, float> Attributes { get; private set; }

    public const int __ID__ = 676994987;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        this.AttackAbility_Ref = (_tables["TbAbilityConfig"] as TbAbilityConfig).GetOrDefault(AttackAbility);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "PrefabRes:" + PrefabRes + ","
        + "AttackAbility:" + AttackAbility + ","
        + "Attributes:" + Bright.Common.StringUtil.CollectionToString(Attributes) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}